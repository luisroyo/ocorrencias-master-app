[1mdiff --git a/src/components/ronda/RondaConfiguracoes.tsx b/src/components/ronda/RondaConfiguracoes.tsx[m
[1mindex a552480..e0a0bf9 100644[m
[1m--- a/src/components/ronda/RondaConfiguracoes.tsx[m
[1m+++ b/src/components/ronda/RondaConfiguracoes.tsx[m
[36m@@ -2,9 +2,12 @@[m [mimport React from 'react';[m
 import { Input } from '../Input';[m
 import { Button } from '../Button';[m
 import { colors } from '../../theme/colors';[m
[32m+[m[32mimport { Condominio } from '../../services/rondas';[m
 [m
 interface RondaConfiguracoesProps {[m
     tipoRonda: 'regular' | 'esporadica';[m
[32m+[m[32m    condominios: Condominio[];[m
[32m+[m[32m    condominiosLoading: boolean;[m
     condominioId: number;[m
     setCondominioId: (id: number) => void;[m
     dataPlantao: string;[m
[36m@@ -26,6 +29,8 @@[m [minterface RondaConfiguracoesProps {[m
 [m
 export const RondaConfiguracoes: React.FC<RondaConfiguracoesProps> = ({[m
     tipoRonda,[m
[32m+[m[32m    condominios,[m
[32m+[m[32m    condominiosLoading,[m
     condominioId,[m
     setCondominioId,[m
     dataPlantao,[m
[36m@@ -62,14 +67,31 @@[m [mexport const RondaConfiguracoes: React.FC<RondaConfiguracoesProps> = ({[m
             <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '16px' }}>[m
                 <div>[m
                     <label style={{ display: 'block', marginBottom: '8px', fontWeight: 'bold' }}>[m
[31m-                        Condom√≠nio ID[m
[32m+[m[32m                        Condom√≠nio[m
                     </label>[m
[31m-                    <Input[m
[31m-                        type="number"[m
[31m-                        value={condominioId}[m
[31m-                        onChange={(e) => setCondominioId(Number(e.target.value))}[m
[31m-                        placeholder="ID do condom√≠nio"[m
[31m-                    />[m
[32m+[m[32m                    {condominiosLoading ? ([m
[32m+[m[32m                        <div style={{ padding: '8px', backgroundColor: '#e9ecef', borderRadius: '4px', textAlign: 'center' }}>[m
[32m+[m[32m                            Carregando condom√≠nios...[m
[32m+[m[32m                        </div>[m
[32m+[m[32m                    ) : ([m
[32m+[m[32m                        <select[m
[32m+[m[32m                            value={condominioId}[m
[32m+[m[32m                            onChange={(e) => setCondominioId(Number(e.target.value))}[m
[32m+[m[32m                            style={{[m
[32m+[m[32m                                width: '100%',[m
[32m+[m[32m                                padding: '8px',[m
[32m+[m[32m                                border: '1px solid #ced4da',[m
[32m+[m[32m                                borderRadius: '4px',[m
[32m+[m[32m                                backgroundColor: 'white'[m
[32m+[m[32m                            }}[m
[32m+[m[32m                        >[m
[32m+[m[32m                            {condominios.map((condominio) => ([m
[32m+[m[32m                                <option key={condominio.id} value={condominio.id}>[m
[32m+[m[32m                                    {condominio.nome}[m
[32m+[m[32m                                </option>[m
[32m+[m[32m                            ))}[m
[32m+[m[32m                        </select>[m
[32m+[m[32m                    )}[m
                 </div>[m
                 <div>[m
                     <label style={{ display: 'block', marginBottom: '8px', fontWeight: 'bold' }}>[m
[1mdiff --git a/src/hooks/useRondaActions.ts b/src/hooks/useRondaActions.ts[m
[1mindex 85052cd..f7ec0b5 100644[m
[1m--- a/src/hooks/useRondaActions.ts[m
[1m+++ b/src/hooks/useRondaActions.ts[m
[36m@@ -1,4 +1,5 @@[m
 import {[m
[32m+[m[32m    listarCondominios,[m
     validarHorarioEntrada,[m
     iniciarRonda,[m
     finalizarRonda,[m
[36m@@ -9,11 +10,27 @@[m [mimport {[m
     consolidarTurnoRondasEsporadicas,[m
     processoCompletoConsolidacao,[m
     marcarRondasProcessadas,[m
[32m+[m[32m    statusConsolidacao,[m
     ValidacaoHorario,[m
[31m-    ConsolidacaoResultado[m
[32m+[m[32m    ConsolidacaoResultado,[m
[32m+[m[32m    StatusConsolidacao,[m
[32m+[m[32m    ListaCondominios[m
 } from '../services/rondas';[m
 [m
 export const useRondaActions = (token: string, setLoading: (loading: boolean) => void) => {[m
[32m+[m[32m    const handleListarCondominios = async (): Promise<ListaCondominios> => {[m
[32m+[m[32m        try {[m
[32m+[m[32m            setLoading(true);[m
[32m+[m[32m            const resultado = await listarCondominios(token);[m
[32m+[m[32m            return resultado;[m
[32m+[m[32m        } catch (error) {[m
[32m+[m[32m            console.error('Erro ao listar condom√≠nios:', error);[m
[32m+[m[32m            return { sucesso: false, condominios: [], total: 0 };[m
[32m+[m[32m        } finally {[m
[32m+[m[32m            setLoading(false);[m
[32m+[m[32m        }[m
[32m+[m[32m    };[m
[32m+[m
     const handleValidarHorario = async (horaEntrada: string) => {[m
         if (!horaEntrada) {[m
             alert('Por favor, informe a hora de entrada.');[m
[36m@@ -278,7 +295,55 @@[m [mexport const useRondaActions = (token: string, setLoading: (loading: boolean) =>[m
         }[m
     };[m
 [m
[32m+[m[32m    const handleStatusConsolidacao = async (condominioId: number, dataPlantao: string): Promise<StatusConsolidacao> => {[m
[32m+[m[32m        if (!dataPlantao) {[m
[32m+[m[32m            alert('Por favor, informe a data.');[m
[32m+[m[32m            return {[m
[32m+[m[32m                sucesso: false,[m
[32m+[m[32m                data: dataPlantao,[m
[32m+[m[32m                condominio_id: condominioId,[m
[32m+[m[32m                status: {[m
[32m+[m[32m                    total_rondas_esporadicas: 0,[m
[32m+[m[32m                    rondas_finalizadas: 0,[m
[32m+[m[32m                    rondas_processadas: 0,[m
[32m+[m[32m                    duracao_total_minutos: 0,[m
[32m+[m[32m                    ronda_principal_criada: false,[m
[32m+[m[32m                    pode_consolidar: false,[m
[32m+[m[32m                    ja_consolidado: false[m
[32m+[m[32m                },[m
[32m+[m[32m                rondas: [][m
[32m+[m[32m            };[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        try {[m
[32m+[m[32m            setLoading(true);[m
[32m+[m[32m            const resultado = await statusConsolidacao(token, condominioId, dataPlantao);[m
[32m+[m[32m            return resultado;[m
[32m+[m[32m        } catch (error) {[m
[32m+[m[32m            console.error('Erro ao verificar status de consolida√ß√£o:', error);[m
[32m+[m[32m            alert('Erro ao verificar status de consolida√ß√£o.');[m
[32m+[m[32m            return {[m
[32m+[m[32m                sucesso: false,[m
[32m+[m[32m                data: dataPlantao,[m
[32m+[m[32m                condominio_id: condominioId,[m
[32m+[m[32m                status: {[m
[32m+[m[32m                    total_rondas_esporadicas: 0,[m
[32m+[m[32m                    rondas_finalizadas: 0,[m
[32m+[m[32m                    rondas_processadas: 0,[m
[32m+[m[32m                    duracao_total_minutos: 0,[m
[32m+[m[32m                    ronda_principal_criada: false,[m
[32m+[m[32m                    pode_consolidar: false,[m
[32m+[m[32m                    ja_consolidado: false[m
[32m+[m[32m                },[m
[32m+[m[32m                rondas: [][m
[32m+[m[32m            };[m
[32m+[m[32m        } finally {[m
[32m+[m[32m            setLoading(false);[m
[32m+[m[32m        }[m
[32m+[m[32m    };[m
[32m+[m
     return {[m
[32m+[m[32m        handleListarCondominios,[m
         handleValidarHorario,[m
         handleIniciarRonda,[m
         handleFinalizarRonda,[m
[36m@@ -286,6 +351,7 @@[m [mexport const useRondaActions = (token: string, setLoading: (loading: boolean) =>[m
         handleEnviarWhatsApp,[m
         handleConsolidarTurno,[m
         handleProcessoCompleto,[m
[31m-        handleMarcarProcessadas[m
[32m+[m[32m        handleMarcarProcessadas,[m
[32m+[m[32m        handleStatusConsolidacao[m
     };[m
 }; [m
\ No newline at end of file[m
[1mdiff --git a/src/hooks/useRondaState.ts b/src/hooks/useRondaState.ts[m
[1mindex c9939c0..5c70433 100644[m
[1m--- a/src/hooks/useRondaState.ts[m
[1m+++ b/src/hooks/useRondaState.ts[m
[36m@@ -2,10 +2,16 @@[m [mimport { useState, useEffect } from 'react';[m
 import {[m
     verificarRondaEmAndamento,[m
     verificarRondaEsporadicaEmAndamento,[m
[31m-    RondaEmAndamento[m
[32m+[m[32m    listarCondominios,[m
[32m+[m[32m    RondaEmAndamento,[m
[32m+[m[32m    Condominio[m
 } from '../services/rondas';[m
 [m
 export const useRondaState = (token: string) => {[m
[32m+[m[32m    // Estados para Condom√≠nios[m
[32m+[m[32m    const [condominios, setCondominios] = useState<Condominio[]>([]);[m
[32m+[m[32m    const [condominiosLoading, setCondominiosLoading] = useState(false);[m
[32m+[m
     // Estados para Rondas Regulares[m
     const [condominioId, setCondominioId] = useState<number>(1);[m
     const [dataPlantao, setDataPlantao] = useState<string>('');[m
[36m@@ -39,6 +45,11 @@[m [mexport const useRondaState = (token: string) => {[m
         setDataFimConsolidacao(dataFormatada);[m
     }, []);[m
 [m
[32m+[m[32m    // Carregar condom√≠nios na inicializa√ß√£o[m
[32m+[m[32m    useEffect(() => {[m
[32m+[m[32m        carregarCondominios();[m
[32m+[m[32m    }, []);[m
[32m+[m
     // Verificar ronda atual[m
     useEffect(() => {[m
         if (dataPlantao) {[m
[36m@@ -46,6 +57,24 @@[m [mexport const useRondaState = (token: string) => {[m
         }[m
     }, [dataPlantao, tipoRonda]);[m
 [m
[32m+[m[32m    const carregarCondominios = async () => {[m
[32m+[m[32m        try {[m
[32m+[m[32m            setCondominiosLoading(true);[m
[32m+[m[32m            const resultado = await listarCondominios(token);[m
[32m+[m[32m            if (resultado.sucesso) {[m
[32m+[m[32m                setCondominios(resultado.condominios);[m
[32m+[m[32m                // Se n√£o h√° condom√≠nios selecionados, selecionar o primeiro[m
[32m+[m[32m                if (resultado.condominios.length > 0 && condominioId === 1) {[m
[32m+[m[32m                    setCondominioId(resultado.condominios[0].id);[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        } catch (error) {[m
[32m+[m[32m            console.error('Erro ao carregar condom√≠nios:', error);[m
[32m+[m[32m        } finally {[m
[32m+[m[32m            setCondominiosLoading(false);[m
[32m+[m[32m        }[m
[32m+[m[32m    };[m
[32m+[m
     const verificarRondaAtual = async () => {[m
         try {[m
             setLoading(true);[m
[36m@@ -68,6 +97,12 @@[m [mexport const useRondaState = (token: string) => {[m
     const rondaAtiva = tipoRonda === 'regular' ? rondaEmAndamento : rondaEsporadicaEmAndamento;[m
 [m
     return {[m
[32m+[m[32m        // Estados de Condom√≠nios[m
[32m+[m[32m        condominios,[m
[32m+[m[32m        setCondominios,[m
[32m+[m[32m        condominiosLoading,[m
[32m+[m[32m        setCondominiosLoading,[m
[32m+[m[32m        carregarCondominios,[m
         // Estados[m
         condominioId, setCondominioId,[m
         dataPlantao, setDataPlantao,[m
[1mdiff --git a/src/pages/Ronda.tsx b/src/pages/Ronda.tsx[m
[1mindex dd75198..c38944d 100644[m
[1m--- a/src/pages/Ronda.tsx[m
[1m+++ b/src/pages/Ronda.tsx[m
[36m@@ -109,6 +109,8 @@[m [mexport const RondaScreen: React.FC<RondaScreenProps> = ({ token = 'mock-token' }[m
                 {/* Configura√ß√µes B√°sicas */}[m
                 <RondaConfiguracoes[m
                     tipoRonda={rondaState.tipoRonda}[m
[32m+[m[32m                    condominios={rondaState.condominios}[m
[32m+[m[32m                    condominiosLoading={rondaState.condominiosLoading}[m
                     condominioId={rondaState.condominioId}[m
                     setCondominioId={rondaState.setCondominioId}[m
                     dataPlantao={rondaState.dataPlantao}[m
[1mdiff --git a/src/services/rondas.ts b/src/services/rondas.ts[m
[1mindex c122826..9ead54e 100644[m
[1m--- a/src/services/rondas.ts[m
[1m+++ b/src/services/rondas.ts[m
[36m@@ -1,5 +1,17 @@[m
 import { apiFetch } from './api';[m
 [m
[32m+[m[32m// Interfaces para Condom√≠nios[m
[32m+[m[32mexport interface Condominio {[m
[32m+[m[32m    id: number;[m
[32m+[m[32m    nome: string;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexport interface ListaCondominios {[m
[32m+[m[32m    sucesso: boolean;[m
[32m+[m[32m    condominios: Condominio[];[m
[32m+[m[32m    total: number;[m
[32m+[m[32m}[m
[32m+[m
 // Interfaces para Rondas Regulares[m
 export interface Ronda {[m
     id: number;[m
[36m@@ -23,14 +35,21 @@[m [mexport interface Ronda {[m
 export interface RondaEsporadica {[m
     id: number;[m
     condominio_id: number;[m
[32m+[m[32m    condominio_nome?: string;[m
     user_id: number;[m
[32m+[m[32m    user_nome?: string;[m
[32m+[m[32m    supervisor_id?: number;[m
[32m+[m[32m    supervisor_nome?: string;[m
     data_plantao: string;[m
     hora_entrada: string;[m
     hora_saida?: string;[m
[32m+[m[32m    duracao_formatada?: string;[m
[32m+[m[32m    duracao_minutos?: number;[m
     escala_plantao: string;[m
     turno: string;[m
     observacoes?: string;[m
[31m-    supervisor_id?: number;[m
[32m+[m[32m    log_bruto?: string;[m
[32m+[m[32m    relatorio_processado?: string;[m
     status: string;[m
     data_criacao?: string;[m
     data_modificacao?: string;[m
[36m@@ -65,6 +84,40 @@[m [mexport interface ConsolidacaoResultado {[m
     relatorio_consolidado?: string;[m
     total_rondas?: number;[m
     periodo?: string;[m
[32m+[m[32m    duracao_total_minutos?: number;[m
[32m+[m[32m    whatsapp_enviado?: boolean;[m
[32m+[m[32m    ronda_principal_id?: number;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mexport interface StatusConsolidacao {[m
[32m+[m[32m    sucesso: boolean;[m
[32m+[m[32m    data: string;[m
[32m+[m[32m    condominio_id: number;[m
[32m+[m[32m    status: {[m
[32m+[m[32m        total_rondas_esporadicas: number;[m
[32m+[m[32m        rondas_finalizadas: number;[m
[32m+[m[32m        rondas_processadas: number;[m
[32m+[m[32m        duracao_total_minutos: number;[m
[32m+[m[32m        ronda_principal_criada: boolean;[m
[32m+[m[32m        ronda_principal_id?: number;[m
[32m+[m[32m        pode_consolidar: boolean;[m
[32m+[m[32m        ja_consolidado: boolean;[m
[32m+[m[32m    };[m
[32m+[m[32m    rondas: RondaEsporadica[];[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// ===== CONDOM√çNIOS =====[m
[32m+[m
[32m+[m[32mexport async function listarCondominios(token: string): Promise<ListaCondominios> {[m
[32m+[m[32m    try {[m
[32m+[m[32m        console.log('Buscando condom√≠nios');[m
[32m+[m[32m        const response = await apiFetch('/api/condominios', {}, token);[m
[32m+[m[32m        console.log('Resposta da busca de condom√≠nios:', response);[m
[32m+[m[32m        return response;[m
[32m+[m[32m    } catch (error: any) {[m
[32m+[m[32m        console.error('Erro ao buscar condom√≠nios:', error);[m
[32m+[m[32m        return { sucesso: false, condominios: [], total: 0 };[m
[32m+[m[32m    }[m
 }[m
 [m
 // ===== RONDAS REGULARES =====[m
[36m@@ -105,7 +158,7 @@[m [mexport async function iniciarRonda(token: string, dados: {[m
             method: 'POST',[m
             body: JSON.stringify(dados)[m
         }, token);[m
[31m-        console.log('Resposta do in√≠cio da ronda:', response);[m
[32m+[m[32m        console.log('Resposta do in√≠cio de ronda:', response);[m
         return response;[m
     } catch (error: any) {[m
         console.error('Erro ao iniciar ronda:', error);[m
[36m@@ -123,7 +176,7 @@[m [mexport async function finalizarRonda(token: string, rondaId: number, dados: {[m
             method: 'PUT',[m
             body: JSON.stringify(dados)[m
         }, token);[m
[31m-        console.log('Resposta da finaliza√ß√£o da ronda:', response);[m
[32m+[m[32m        console.log('Resposta da finaliza√ß√£o de ronda:', response);[m
         return response;[m
     } catch (error: any) {[m
         console.error('Erro ao finalizar ronda:', error);[m
[36m@@ -141,7 +194,7 @@[m [mexport async function atualizarRonda(token: string, rondaId: number, dados: {[m
             method: 'PUT',[m
             body: JSON.stringify(dados)[m
         }, token);[m
[31m-        console.log('Resposta da atualiza√ß√£o da ronda:', response);[m
[32m+[m[32m        console.log('Resposta da atualiza√ß√£o de ronda:', response);[m
         return response;[m
     } catch (error: any) {[m
         console.error('Erro ao atualizar ronda:', error);[m
[36m@@ -155,7 +208,7 @@[m [mexport async function gerarRelatorioRonda(token: string, condominioId: number, d[m
         const response = await apiFetch(`/api/rondas/gerar-relatorio/${condominioId}/${data}`, {[m
             method: 'POST'[m
         }, token);[m
[31m-        console.log('Resposta do relat√≥rio de ronda:', response);[m
[32m+[m[32m        console.log('Resposta da gera√ß√£o de relat√≥rio:', response);[m
         return response;[m
     } catch (error: any) {[m
         console.error('Erro ao gerar relat√≥rio de ronda:', error);[m
[36m@@ -169,7 +222,7 @@[m [mexport async function enviarRondaWhatsApp(token: string, condominioId: number, d[m
         const response = await apiFetch(`/api/rondas/enviar-whatsapp/${condominioId}/${data}`, {[m
             method: 'POST'[m
         }, token);[m
[31m-        console.log('Resposta do envio WhatsApp:', response);[m
[32m+[m[32m        console.log('Resposta do envio via WhatsApp:', response);[m
         return response;[m
     } catch (error: any) {[m
         console.error('Erro ao enviar ronda via WhatsApp:', error);[m
[36m@@ -240,7 +293,7 @@[m [mexport async function iniciarRondaEsporadica(token: string, dados: {[m
             method: 'POST',[m
             body: JSON.stringify(dados)[m
         }, token);[m
[31m-        console.log('Resposta do in√≠cio da ronda espor√°dica:', response);[m
[32m+[m[32m        console.log('Resposta do in√≠cio de ronda espor√°dica:', response);[m
         return response;[m
     } catch (error: any) {[m
         console.error('Erro ao iniciar ronda espor√°dica:', error);[m
[36m@@ -258,7 +311,7 @@[m [mexport async function finalizarRondaEsporadica(token: string, rondaId: number, d[m
             method: 'PUT',[m
             body: JSON.stringify(dados)[m
         }, token);[m
[31m-        console.log('Resposta da finaliza√ß√£o da ronda espor√°dica:', response);[m
[32m+[m[32m        console.log('Resposta da finaliza√ß√£o de ronda espor√°dica:', response);[m
         return response;[m
     } catch (error: any) {[m
         console.error('Erro ao finalizar ronda espor√°dica:', error);[m
[36m@@ -275,7 +328,7 @@[m [mexport async function atualizarRondaEsporadica(token: string, rondaId: number, d[m
             method: 'PUT',[m
             body: JSON.stringify(dados)[m
         }, token);[m
[31m-        console.log('Resposta da atualiza√ß√£o da ronda espor√°dica:', response);[m
[32m+[m[32m        console.log('Resposta da atualiza√ß√£o de ronda espor√°dica:', response);[m
         return response;[m
     } catch (error: any) {[m
         console.error('Erro ao atualizar ronda espor√°dica:', error);[m
[36m@@ -315,10 +368,10 @@[m [mexport async function consolidarTurnoRondasEsporadicas(token: string, condominio[m
         const response = await apiFetch(`/api/rondas-esporadicas/consolidar-turno/${condominioId}/${data}`, {[m
             method: 'POST'[m
         }, token);[m
[31m-        console.log('Resposta da consolida√ß√£o:', response);[m
[3